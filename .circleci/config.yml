version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/base:stable
    working_directory: ~/project

jobs:
  build:
    executor: docker-executor
    environment:
      REGISTRY: docker.io
      IMAGE_NAME: securaops/n8n
    steps:
      - checkout

      - run:
          name: Install Docker CLI & Buildx
          command: |
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh

            # Ensure docker group exists and the current user is in it
            sudo usermod -aG docker $USER || true

            # Enable Docker Buildx
            docker buildx version || docker buildx create --use

            # Show installed versions
            docker version
            docker buildx version

      - run:
          name: Authenticate to Docker registry
          command: |
            echo "$REGISTRY_TOKEN" | docker login $REGISTRY -u "$REGISTRY_USER" --password-stdin

      - run:
          name: Debug workspace
          command: ls -la ./docker/images/n8n/

      - run:
          name: Extract Git SHA
          command: |
            if [ -n "$CIRCLE_PULL_REQUEST" ]; then
              export SHA=$(git rev-parse HEAD)
            else
              export SHA=$CIRCLE_SHA1
            fi
            echo "export SHA=$SHA" >> $BASH_ENV

      - run:
          name: Build Docker image
          command: |
            source $BASH_ENV
            docker buildx build \
              --platform linux/amd64 \
              --build-arg SHA=$SHA \
              -f ./docker/images/n8n/Dockerfile \
              -t $REGISTRY/$IMAGE_NAME:$SHA \
              --label org.opencontainers.image.revision=$SHA \
              --cache-from=type=local,src=/tmp/.buildx-cache \
              --cache-to=type=local,dest=/tmp/.buildx-cache-new \
              $( [ -z "$CIRCLE_PULL_REQUEST" ] && echo "--push" || echo "--load" ) \
              .

      - run:
          name: Authenticate to Docker (again, if needed)
          command: |
            echo "$REGISTRY_TOKEN" | docker login $REGISTRY -u "$REGISTRY_USER" --password-stdin

      - run:
          name: Docker Scout Compare (only on PR)
          command: |
            if [ -n "$CIRCLE_PULL_REQUEST" ]; then
              docker scout compare \
                --only-severities critical,high \
                --ignore-unchanged \
                $REGISTRY/$IMAGE_NAME:$SHA production
            else
              echo "Not a pull request, skipping Docker Scout compare."
            fi

      - run:
          name: Install kubectl and setup Kubeconfig
          command: |
            sudo apt-get update
            sudo apt-get install -y curl
            curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl && sudo mv kubectl /usr/local/bin/
            mkdir -p ~/.kube
            echo "$KUBECONFIG_CONTENT" > ~/.kube/config
            chmod 600 ~/.kube/config

      - run:
          name: Deploy to Kubernetes
          command: |
            source $BASH_ENV
            kubectl set image deployment/n8n n8n=$REGISTRY/$IMAGE_NAME:$SHA --namespace=$KUBE_NAMESPACE
            kubectl rollout status deployment/n8n --namespace=$KUBE_NAMESPACE

workflows:
  version: 2
  build_and_scan:
    jobs:
      - build:
          context: docker-creds
          filters:
            branches:
              only:
                - circleci-project-setup
            tags:
              only: /.*/